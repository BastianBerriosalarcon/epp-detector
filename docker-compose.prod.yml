# =============================================================================
# Docker Compose - Configuración PRODUCCIÓN
# =============================================================================
# Usar con: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
#
# Diferencias con desarrollo:
# - Sin volumes de código (no hot-reload)
# - Límites de recursos configurados
# - Healthcheck más estricto
# - Modo readonly para volúmenes
# - Sin puertos expuestos directamente (usar reverse proxy)
# =============================================================================

version: '3.8'

services:
  api:
    # Override de environment para producción
    environment:
      - DEBUG=false
      - ENVIRONMENT=production
      - LOG_LEVEL=warning
      - UVICORN_WORKERS=4  # 4 workers para producción

    # SIN volumes de código (usar imagen bakeada)
    volumes:
      # Solo modelos en modo readonly
      - ./models:/app/models:ro
      # Config en readonly
      - ./.env:/app/.env:ro

    # Límites de recursos
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8G
        reservations:
          cpus: '2.0'
          memory: 4G

      # Restart policy
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

    # Healthcheck más estricto
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=5).raise_for_status()"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 60s

    # No exponer puertos directamente (usar Nginx reverse proxy)
    # ports: []

    # Logging driver
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

    # Security options
    security_opt:
      - no-new-privileges:true

    # Read-only root filesystem (excepto directorios específicos)
    # read_only: true
    # tmpfs:
    #   - /tmp
    #   - /app/logs

# =============================================================================
# Nginx Reverse Proxy (TODO)
# =============================================================================
# nginx:
#   image: nginx:alpine
#   container_name: epp-detector-nginx
#   ports:
#     - "80:80"
#     - "443:443"
#   volumes:
#     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
#     - ./nginx/ssl:/etc/nginx/ssl:ro
#   depends_on:
#     - api
#   restart: always
#   networks:
#     - epp-network
